/**
 * Copyright (c) 2020-2021 August, Ice
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import type { APIApplication } from 'discord-api-types';
import type WebSocketClient from '../gateway/WebSocketClient';
import { User } from './User';
import Team from './teams/Team';
import Base from './Base';
export declare class Application extends Base<APIApplication> {
    requiresCodeGrant: boolean;
    primarySkuID: string;
    description: string | null;
    rpcOrigins: string[];
    coverImage: string | null;
    isPublic: boolean;
    guildID: string;
    summary: string | null;
    private client;
    owner: User | null;
    flags: number;
    team: Team | null;
    icon: string | null;
    name: string;
    slug: string;
    constructor(client: WebSocketClient, data: APIApplication);
    patch(data: APIApplication): void;
    get iconUrl(): string | null;
    get coverUrl(): string | null;
}
