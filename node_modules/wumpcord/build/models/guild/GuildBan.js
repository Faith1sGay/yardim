"use strict";
/**
 * Copyright (c) 2020-2021 August, Ice
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const User_1 = require("../User");
class GuildBan {
    /**
     * Creates a new [GuildBan] instance
     * @param client The [WebSocketClient] attached
     * @param data The data from Discord
     */
    constructor(client, data) {
        this.client = client;
        this.patch(data);
    }
    patch(data) {
        this.userID = data.user.id;
        this.user = this.client.users.add(new User_1.User(this.client, data.user));
        if (data.reason !== undefined)
            this.reason = data.reason;
    }
    toString() {
        return `[wumpcord.GuildBan<U: ${this.user.tag}${this.reason ? `, R: ${this.reason}` : ''}>]`;
    }
}
exports.default = GuildBan;
